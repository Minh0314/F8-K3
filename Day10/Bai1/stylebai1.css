* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  list-style-type: none;
}

:root {
  --primary-color: #01a9f4;
}
a {
  text-decoration: none;
}
.container {
  width: 100vw;
  height: 100vh;
  background-color: #01a9f4;
  position: relative;
  z-index: 1;
}
header {
  position: absolute;
  top: 40%;
  left: 70%;
  transform: translateY(-50%);
}
header .title {
  color: #fff;
  font-size: 35px;
  margin-left: 20px;
}
header .sub-title {
  color: #fff;
}
header .sub-title > span:nth-child(1) {
  font-size: 15px;
  font-weight: 10;
}
header .sub-title > span:nth-child(2) {
  font-size: 26px;
  font-weight: 100;
}
/* =================================== */
.background-main {
  padding: 25px;
  width: 80px;
  height: 80px;
  background-color: #fff;
  border-bottom-right-radius: 999px;
  position: absolute;
  transition: 0.2s linear;
  z-index: 2;
}

.toggle-article .toogle-menu a {
  margin-left: 30px;
  /* margin-bottom: 60px; */
  list-style-type: none;
  font-size: 17px;
  font-weight: 600;
  /* color: ; */
  /* color: var(--primary-color); */
  z-index: 3;
}
.toggle-article .toogle-menu li {
  margin-bottom: 15px;
}

.toogle-menu {
  display: none;
}

#menu {
  display: none;
}

.icon {
  position: absolute;
  padding: 25px;
  width: 110px;
  height: 110px;
  background-color: #fff;
  border-bottom-right-radius: 999px;
  z-index: 5;
}

/* checked */
/* #menu:checked ~ .toogle-menu {
  display: block;
}
#menu:checked ~ .background-main {
  width: 100vw;
  height: 100vh;
  border-radius: 0;
} */

.menu-btn {
  color: #d21919;
  z-index: 2;
}
.arrow {
  color: #c11414;
  z-index: 2;
}
.menu-btn,
.arrow {
  /* display: none; */
}
/* #menu:checked ~ .icon .menu-btn {
  display: none;
}
#menu:checked ~ .icon .arrow {
transform: rotate(350deg);
}
.menu:checked ~ .background {
  width: 100%;
  height: 100%;
  border-radius: 0;
}
.menu:checked ~ .toogle-menu {
  display: block;
} */
#menu:checked ~ .fa-arrow-left{
  transform: rotate(360deg);
}

.menu-btn {
  animation: rotateBar 0.2s linear;
}
.arrow {
  animation: rotateReturn 0.2s linear;
}
@keyframes move {
  form {
    rotate: 0;
  }
  to {
    rotate: 360deg;
  }
}
@keyframes move {
  from {
    rotate: 0;
  }

  to {
    rotate: -360deg;
  }
}
